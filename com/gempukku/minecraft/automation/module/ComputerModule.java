package com.gempukku.minecraft.automation.module;

import com.gempukku.minecraft.automation.computer.ComputerData;
import com.gempukku.minecraft.automation.lang.FunctionExecutable;
import net.minecraft.world.IBlockAccess;

/**
 * Interface to implement when defining a ComputerModule.
 */
public interface ComputerModule {
    /**
     * Returns a string representing the module type. It is recommended to user Camel-Case string, with no spaces,
     * starting with a capital letter, i.e. "SampleModuleDiggingHoles".
     * @return Module type.
     */
    public String getModuleType();

    /**
     * Returns a function with the specified name. To make the implementation easier, you can subclass
     * JavaFunctionExecutable class, that defines an easy to use interface for Java developers.
     * @param name Name of the function this module supports.
     * @return Function that will be executed, when invoked by the program, or null if there is no function with this
     * name.
     */
    public FunctionExecutable getFunctionByName(String name);

    /**
     * Returns strength of the weak redstone signal on the specified side of the computer.
     * @param computerData Computer that is queried for returning the signal.
     * @param input The input strength power that might have been generated by the computer itself, or any other module.
     * @param blockAccess Access to blocks in the world.
     * @param side Side of the computer that is queried for redstone signal
     * @return The signal strength (if any). If no signal should be returned - return 0, otherwise the strength (1-15).
     * If this ComputerModule has nothing to do with Redstone signal, it should just return input value.
     */
    public int getWeakRedstoneSignalStrengthOnSide(ComputerData computerData, int input, IBlockAccess blockAccess, int side);

    /**
     * Returns strength of the strong redstone signal on the specified side of the computer.
     * @param computerData Computer that is queried for returning the signal.
     * @param input The input strength power that might have been generated by the computer itself, or any other module.
     * @param blockAccess Access to blocks in the world.
     * @param side Side of the computer that is queried for redstone signal
     * @return The signal strength (if any). If no signal should be returned - return 0, otherwise the strength (1-15).
     * If this ComputerModule has nothing to do with Redstone signal, it should just return input value.
     */
    public int getStrongRedstoneSignalStrengthOnSide(ComputerData computerData, int input, IBlockAccess blockAccess, int side);
}
